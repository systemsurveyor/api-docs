openapi: 3.1.0

info:
  title: System Surveyor Public API
  version: 2.0.0

security:
  - bearerAuth: []

paths:
  /v2/login:
    post:
      security: []
      tags:
        - Login
      summary: Authenticate to API
      description: Login to System Surveyor using JWT token authentication.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  required: true
                password:
                  type: string
                  required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  refresh_token:
                    type: string
                  auth_token:
                    type: string
                  user_id:
                    type: integer
                  email:
                    type: string
                  ssv_session_id:
                    type: string

  /v2/site:
    post:
      tags:
        - Sites
      summary: Create a new site
      operationId: createSite
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/requestSite"
      responses:
        "201":
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  site_id:
                    type: string
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"

  /v2/site/{id}:
    parameters:
      - name: id
        in: path
        description: Site ID
        required: true
        schema:
          type: integer

    get:
      tags:
        - Sites
      summary: Get site information
      description: Response also includes available permissions for the current user of the site
      operationId: getSiteById
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  site_id:
                    type: string
                  team_id:
                    type: number
                  name:
                    type: string
                  label:
                    type: string
                  city:
                    type: string
                  state:
                    type: string
                  street:
                    type: string
                  zip_code:
                    type: string
                  creator:
                    type: object
                    properties:
                      user_id:
                        type: number

                      first_name:
                        type: string

                      last_name:
                        type: string
                  modifier:
                    type: object
                    properties:
                      user_id:
                        type: number
                      first_name:
                        type: string
                      last_name:
                        type: string
                  is_archived:
                    type: boolean
                  version:
                    type: number
                  reference_id:
                    type: string
                  tags:
                    type: array
                    items:
                      type: string
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"

    put:
      tags:
        - Sites
      summary: Update a site
      description: Only team members, guests with edit permissions, site creators, account admins and team admins can update sites.
      operationId: updateSite
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/requestSite"
      responses:
        "200":
          description: "OK"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"

    delete:
      tags:
        - Sites
      summary: Delete a site
      operationId: deleteSite
      responses:
        "200":
          description: "OK"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"


  /v2/survey/{id}/lock:
    post:
      tags:
        - Surveys
      operationId: requestSurveyEdit
      summary: Request survey edit
      description: >
        Places a lock on a survey so that other users cannot edit it. The user requesting edit will have the lock.
        If the survey already has an editor, the editor will receive an email notifying that a user would like access.
        Only team members or guests with write permissions can request survey edit.
      parameters:
        - name: id
          in: path
          description: Survey ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          desription: "OK"


components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    BadRequestError:
      description: Invalid request sent to endpoint
    UnauthorizedError:
      description: Access token is missing or invalid
    ForbiddenError:
      description: Invalid permissions to perform operation
    NotFoundError:
      description: The specified resource was not found

  schemas:
    requestSite:
      type: object
      properties:
        name:
          type: string
        team_id:
          type: integer
        state:
          type: string
        city:
          type: string
        zip_code:
          type: string
        street:
          type: string
        label:
          type: string
        version:
          type: integer
        reference_id:
          type: string
        tags:
          type: array
          items:
            type: string
