components:
  parameters:
    page:
      description: Page to retrieve from the entire result set
      in: query
      name: page
      schema:
        default: 1
        minimum: 1
        type: integer
    page[number]:
      description: Page to retrieve from the entire result set
      in: query
      name: page[number]
      schema:
        default: 1
        minimum: 1
        type: integer
    page[size]:
      description: Max amount of objects to return per page in the response
      in: query
      name: page[size]
      schema:
        default: 100
        maximum: 100
        type: integer
    page_size:
      description: Max amount of objects to return per page in the response
      in: query
      name: page_size
      schema:
        default: 100
        maximum: 100
        type: integer
    q:
      description: Apply search to query
      in: query
      name: q
      schema:
        type: string
  responses:
    BadRequestError:
      description: Invalid request sent to endpoint
    ForbiddenError:
      description: Invalid permissions to perform operation
    NotFoundError:
      description: The specified resource was not found
    UnauthorizedError:
      description: Access token is missing or invalid
    UnprocessableEntityError:
      description: Unable to process the contained instructions
  schemas:
    Attribute:
      properties:
        attribute_id:
          type: integer
        value:
          type: string
      required:
      - attribute_id
      - value
      type: object
    CablePath:
      properties:
        a_side: {}
        id:
          type: string
        type:
          type: string
        z_side: {}
      required:
      - a_side
      - id
      - z_side
      type: object
    EPAccessory:
      properties:
        created_at:
          readOnly: true
        description:
          type: string
        id:
          readOnly: true
          type: integer
        labor_hours:
          default: !!python/object/apply:decimal.Decimal
          - 0E-10
          type:
          - number
          - '''null'''
        manufacturer:
          default: ''
          type: string
        model:
          default: ''
          type: string
        price:
          default: !!python/object/apply:decimal.Decimal
          - 0E-10
          type:
          - number
          - '''null'''
      required:
      - description
      type: object
    EPContent:
      properties:
        attribute:
          default: []
          items:
            $ref: '#/components/schemas/Attribute'
          type: array
        child:
          default: []
          items:
            $ref: '#/components/schemas/SubElement'
          type: array
        pdf_url:
          default: []
          items:
            $ref: '#/components/schemas/Link'
          maxItems: 2
          type: array
      type: object
    ElementProfileSchema:
      properties:
        accessories:
          items:
            $ref: '#/components/schemas/EPAccessory'
          type: array
        content:
          $ref: '#/components/schemas/EPContent'
        created_at:
          readOnly: true
        created_by:
          readOnly: true
          type: integer
        element_id:
          type: integer
        id:
          readOnly: true
          type: integer
        is_default:
          type: boolean
        modified_at:
          readOnly: true
        name:
          type: string
        sort:
          type: integer
        team_id:
          type: integer
      required:
      - content
      - element_id
      - name
      - team_id
      type: object
    FolderSchema:
      properties:
        id:
          readOnly: true
          type: string
        label:
          type: string
        name:
          type: string
        site_external_id:
          type: string
          writeOnly: true
        site_id:
          readOnly: true
          type: integer
        team_id:
          type: integer
      required:
      - name
      type: object
    Link:
      properties:
        link_type:
          type: integer
        name:
          type: string
        url:
          format: url
          type: string
      required:
      - link_type
      - name
      - url
      type: object
    PathConnection:
      properties:
        end: {}
        start: {}
      type: object
    RelatedUser:
      properties:
        first_name:
          type: string
        last_name:
          type: string
        user_id: {}
      type: object
    ShareSiteOrSurveyRequestSchema:
      properties:
        created_at:
          readOnly: true
          type:
          - '''null'''
        emails:
          items:
            format: email
            type: string
          type: array
        expiration_date: {}
        message:
          type: string
        modified_at:
          readOnly: true
          type:
          - '''null'''
      required:
      - emails
      - expiration_date
      type: object
    SiteSchema:
      properties:
        city:
          maxLength: 250
          type: string
        created_at:
          readOnly: true
          type:
          - '''null'''
        creator:
          allOf:
          - $ref: '#/components/schemas/UserResponse'
          readOnly: true
        is_archived: {}
        label:
          maxLength: 255
          type: string
        legacy_site_id:
          readOnly: true
          type: integer
        modified_at:
          readOnly: true
          type:
          - '''null'''
        modifier:
          allOf:
          - $ref: '#/components/schemas/UserResponse'
          readOnly: true
        name:
          maxLength: 250
          type: string
        reference_id:
          maxLength: 255
          type: string
        site_id:
          type: string
        state:
          maxLength: 250
          type: string
        street:
          maxLength: 250
          type: string
        tags:
          items:
            type: string
          type: array
        team_id:
          type: integer
        version:
          readOnly: true
          type: integer
        zip_code:
          maxLength: 250
          type: string
      required:
      - name
      - team_id
      type: object
    SubElement:
      properties:
        element_id:
          type: string
        systemtype_id:
          type: string
      required:
      - element_id
      - systemtype_id
      type: object
    SurveyAnnotation:
      properties:
        category: {}
        end_point: {}
        font_size:
          type: string
        id:
          readOnly: true
          type: string
        location: {}
        size:
          type: string
        start_point: {}
        stroke_color:
          type: string
        stroke_width:
          type: string
        text:
          type: string
      required:
      - category
      - location
      - stroke_color
      - stroke_width
      type: object
    SurveyAttribute:
      properties:
        attribute_id:
          type: integer
        id:
          readOnly: true
          type: integer
        name:
          type: string
        value:
          type: string
      required:
      - attribute_id
      - name
      - value
      type: object
    SurveyElement:
      properties:
        id:
          type: string
        name:
          type: string
        element_id:
          type: integer
        element_index:
          type: integer
        element_profile_id:
          type: integer
        systemtype_id:
          type: integer
        variant: {}
        z_order:
          type: integer
        position: {}
        photo_urls:
          items:
            type: string
          type: array
        pdf_urls:
          items:
            type: object
          type: array
        attributes:
          items:
            $ref: '#/components/schemas/SurveyAttribute'
          type: array
        accessories:
          items:
            $ref: '#/components/schemas/SurveyElementAccessory'
          type: array
        children:
          items:
            $ref: '#/components/schemas/SurveyElement'
          type: array
        cables:
          items:
            $ref: '#/components/schemas/CablePath'
          type: array
        connections:
          $ref: '#/components/schemas/PathConnection'
        activity_log:
          items:
            $ref: '#/components/schemas/SurveyElementActivityLog'
          type: array
      required:
      - element_id
      - id
      - name
      - position
      - systemtype_id
      type: object
    SurveyElementAccessory:
      properties:
        description:
          type: string
        id:
          readOnly: true
          type: string
        labor_hours:
          type: number
        manufacturer:
          type: string
        model:
          type: string
        price: {}
        quantity: {}
        row_index:
          type: integer
      required:
      - manufacturer
      - model
      - row_index
      type: object
    SurveyElementActivityLog:
      properties:
        date:
          readOnly: true
        entry:
          type: string
        id:
          readOnly: true
          type: string
      type: object
    SurveyFields:
      properties:
        field_id:
          type: string
        value:
          type: string
      required:
      - field_id
      - value
      type: object
    SurveyOptions:
      properties:
        id:
          type: string
        inputs:
          items:
            $ref: '#/components/schemas/SurveyFields'
          type: array
        scope:
          enum:
          - template
          - model
          - content
          type: string
        template_name:
          type: string
        value:
          type: boolean
      required:
      - id
      - scope
      - value
      type: object
    SurveyReportRequestSchema:
      properties:
        custom_data:
          type: object
        filters:
          items:
            type: object
          type: array
        is_excel:
          default: false
          type: boolean
        is_site_report:
          default: false
          type: boolean
        name:
          type: string
        options:
          items:
            $ref: '#/components/schemas/SurveyOptions'
          type: array
        output:
          enum:
          - pdf
          - html
          - xls
          type: string
        paper_size:
          type: string
        report_id:
          format: uuid
          type: string
        site_id:
          type: string
        survey_ids:
          items:
            type: string
          type: array
      required:
      - name
      - output
      - report_id
      - site_id
      type: object
    SurveyReportRequestSchemaDeprecated:
      properties:
        custom_data:
          type: object
        filters:
          items:
            type: object
          type: array
        ids:
          items:
            type: string
          type: array
        is_excel:
          default: false
          type: boolean
        is_site_report:
          default: false
          type: boolean
        name:
          type: string
        options:
          items:
            $ref: '#/components/schemas/SurveyOptions'
          type: array
        output:
          enum:
          - pdf
          - html
          - xls
          type: string
        paper_size:
          type: string
        report_id:
          format: uuid
          type: string
        site_id:
          type: string
      required:
      - name
      - output
      - report_id
      - site_id
      type: object
    SurveySchema:
      properties:
        id:
          readOnly: true
          type: string
        title:
          type: string
        label:
          type: string
        reference_id:
          type: string
        description:
          type: string
        summary:
          type: string
        location:
          type: string
        status:
          writeOnly: true
        site:
          readOnly: true
        icon_size:
          type: integer
        is_archived:
          readOnly: true
          type: boolean
        unit: {}
        version:
          readOnly: true
          type: integer
        margin_range:
          type: number
        type:
          readOnly: true
        floorplan_scale:
          type: number
        preview_image:
          readOnly: true
          type: string
        floorplan_url:
          readOnly: true
          type: string
        creator:
          readOnly: true
          type: integer
        editor:
          allOf:
          - $ref: '#/components/schemas/RelatedUser'
          readOnly: true
        modifier:
          readOnly: true
          type: integer
        created_at:
          readOnly: true
        modified_at:
          readOnly: true
        elements:
          items:
            $ref: '#/components/schemas/SurveyElement'
          type: array
        annotations:
          items:
            $ref: '#/components/schemas/SurveyAnnotation'
          type: array
        users:
          readOnly: true
      required:
      - icon_size
      - margin_range
      - title
      - unit
      type: object
    UserResponse:
      properties:
        first_name:
          type: string
        last_name:
          type: string
        user_id:
          type: integer
      required:
      - user_id
      type: object
  securitySchemes:
    jwt:
      bearerFormat: JWT
      scheme: bearer
      type: http
info:
  title: System Surveyor API
  version: 2.0.0
openapi: 3.1.0
paths:
  /v3/resource:
    get:
      description: 'Resource path is a relative URL to the binary resource in EFS,
        passed in a `path` query parameter.


        Example path: `2022/08/05/207e7214-6792-4288-8820-438b1f3233be.png`

        '
      operationId: get_resource
      parameters:
      - description: Relative URL of the resource
        in: path
        name: path
        required: true
        schema:
          example: 2022/08/05/207e7214-6792-4288-8820-438b1f3233be.png
          type: string
      public: true
      responses:
        '200':
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: A binary resource file
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
      summary: Fetches a binary resource and returns it as bytes.
      tags:
      - Resources
      - v3
  /v3/survey_element/{survey_element_id}/resource:
    post:
      operationId: add_survey_element_resource
      parameters:
      - description: The external id of the surveyelement
        in: path
        name: survey_element_id
        required: true
      public: true
      requestBody:
        content:
          application/pdf:
            schema:
              example: /tmp/path-to-file.pdf
              format: binary
              type: string
          image/jpeg:
            schema:
              example: /tmp/path-to-file.jpeg
              format: binary
              type: string
          image/jpg:
            schema:
              example: /tmp/path-to-file.jpg
              format: binary
              type: string
          image/png:
            schema:
              example: /tmp/path-to-file.png
              format: binary
              type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      resource_url:
                        example: 2022/11/01/39dace0d-7aa3-47c7-9bff-9c87fbe2c00b.png
                        type: string
                    type: object
                type: object
          description: The path to the uploaded file
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
      summary: Sets an image to a survey element.
      tags:
      - Resources
      - v3
  /v3/folder/{folder_id}:
    delete:
      description: 'Folder must be empty in order to be deleted.


        Only account admins, team admins, and team members can delete folders. Only
        team members with write access can delete survey

        folders.

        '
      operationId: delete_folder
      parameters:
      - description: Folder ID
        in: path
        name: folder_id
        required: true
        schema:
          example: 40759717-c239-4504-a0a5-7e7f57220995
          type: string
      public: true
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
      summary: Soft deletes a site folder or a survey folder.
      tags:
      - Folders
      - v3
  /v3/site_folder:
    post:
      operationId: create_site_folder
      public: true
      requestBody:
        content:
          application/json:
            schema:
              properties:
                label:
                  example: S0124
                  type: string
                name:
                  description: Folder name. Does not need to be unique
                  example: My Folder
                  required: true
                  type: string
                team_id:
                  required: true
                  type: integer
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderSchema'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      summary: Creates a new folder that can hold sites
      tags:
      - Folders
      - v3
  /v3/site_folder/{folder_external_id}:
    patch:
      operationId: update_folder
      parameters:
      - description: Folder ID
        in: path
        name: id
        required: true
        schema:
          example: 40759717-c239-4504-a0a5-7e7f57220995
          type: string
      public: true
      requestBody:
        content:
          application/json:
            schema:
              properties:
                label:
                  example: ER-1233
                  type: string
                name:
                  description: Folder name. Does not need to be unique
                  example: My Folder
                  required: true
                  type: string
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderSchema'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      summary: Update all fields of a folder
      tags:
      - Folders
      - v3
  /v3/{site_id}/folder:
    post:
      operationId: create_survey_folder
      parameters:
      - description: Site external ID
        in: path
        name: site_id
        required: true
        schema:
          example: 40759717-c239-4504-a0a5-7e7f57220995
          type: string
      public: true
      requestBody:
        content:
          application/json:
            schema:
              properties:
                label:
                  description: Folder label
                  example: LS1-34
                  type: string
                name:
                  description: Folder name. Does not need to be unique
                  example: My Folder
                  required: true
                  type: string
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderSchema'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      summary: Allows creating folders inside a site, which can store and organize
        surveys
      tags:
      - Folders
      - v3
  /v3/survey_folder/{folder_id}:
    delete:
      description: 'Folders that already contain surveys are not allowed to be deleted.


        Only team members with write access can delete survey folders.

        '
      operationId: delete_survey_folder
      parameters:
      - description: Folder ID
        in: path
        name: folder_id
        required: true
        schema:
          example: 40759717-c239-4504-a0a5-7e7f57220995
          type: string
      public: true
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
      summary: Deletes a survey folder in a site.
      tags:
      - Folders
      - v3
  /v3/site_folder/{folder_id}:
    delete:
      description: 'Folder must be empty in order to be deleted. Only account admins,
        team admins, and team members can delete folders.

        '
      operationId: delete_site_folder
      parameters:
      - description: Folder ID
        in: path
        name: folder_id
        required: true
        schema:
          example: 40759717-c239-4504-a0a5-7e7f57220995
          type: string
      public: true
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
      summary: Soft deletes a folder that can contain sites.
      tags:
      - Folders
      - v3
  /v3/report:
    post:
      description: 'Reports are created by an external PHP service by picking up messages
        from the queue.

        '
      operationId: create_report
      public: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SurveyReportRequestSchema'
        required: true
      responses:
        '202':
          description: Report scheduled successfully
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
      summary: Queues a message for creating reports for sites or surveys
      tags:
      - Reports
  /v3/site/{site_id}:
    delete:
      operationId: delete_site
      parameters:
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema:
          example: 40759717-c239-4504-a0a5-7e7f57220995
          type: string
      public: true
      responses:
        '204':
          description: OK
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
      summary: Hard deletes a site and all related objects.
      tags:
      - Sites
      - v3
  /v3/sites:
    get:
      description: "Explanation of usage of filters:\n\nFiltered by favorites:\n \
        \ - All sites that are in workbench but not in a folder\n  - All folders that\
        \ have a site under them that is in the workbench\n  - Don\u2019t return sites\
        \ that are in workbench but also in a folder\n\nFiltered by folder and favorites:\n\
        \  - All sites in the folder that are in the workbench\n\nFiltered by folder:\n\
        \  - All sites in folder\n"
      operationId: get_user_sites_and_folders
      parameters:
      - $ref: '#/components/parameters/page[number]'
      - $ref: '#/components/parameters/page[size]'
      - description: Return only sites that have been created, modified, or favorited
          (added to workbench) after an specific datetime (in UTC Epoch format).
        in: query
        name: filter[modified_after]
        schema:
          example: 1645157198
          type: integer
      - description: Return only sites that were deleted after an specified timestamp.
          Limited site data is returned using this filter.
        in: query
        name: filter[deleted_after]
        schema:
          example: 56489413165
          type: integer
      - description: Filters results to only include sites the user has added to their
          workbench
        in: query
        name: filter[favorites_only]
        schema:
          example: 1
          type: integer
      - description: Returns only sites that belong to a specific folder
        in: query
        name: filter[folder_id]
        schema:
          example: 963dcf8a-9c99-4da0-adeb-12b86d99b122
          type: string
      public: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  sites:
                    description: Result list of sites or folders
                    items:
                      properties:
                        favorite_timestamp:
                          description: Timestamp of when the site was added to favorites
                          example: 12034903409
                          type: integer
                        has_favorite_sites:
                          description: Indicates if a folder has sites that are in
                            the user's workbench
                          example: true
                          type: boolean
                        id:
                          example: 46787da3-1e6e-4d9b-a858-ac9e12dc3efb
                          type: string
                        modified_at:
                          description: 'Datetime of the most recently modified survey
                            in the site. If the site has no surveys, falls back to
                            the

                            site''s own `modified_at` datetime.

                            '
                          example: 1644374426
                          type: integer
                        modifier:
                          properties:
                            first_name:
                              example: John
                              type: string
                            last_name:
                              example: Doe
                              type: string
                            user_id:
                              example: 12390
                              type: integer
                          type: object
                        name:
                          example: Union Square
                          type: string
                        owner:
                          properties:
                            first_name:
                              example: John
                              type: string
                            last_name:
                              example: Doe
                              type: string
                            user_id:
                              example: 12390
                              type: integer
                          type: object
                        survey_count:
                          example: 12
                          type: integer
                        team:
                          properties:
                            name:
                              name: John Doe's team
                              type: string
                            team_id:
                              example: 1049
                              type: integer
                          type: object
                        type:
                          description: If the result item is a site or a folder
                          enum:
                          - site
                          - folder
                          example: site
                          type: string
                        version:
                          example: 45479945
                          type: integer
                      type: object
                    type: array
                type: object
          description: OK
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      summary: Returns all archived/unarchived sites and folders across all teams
        of a user.
      tags:
      - Sites
      - v3
  /v3/site/{site_id}/surveys:
    get:
      description: 'Surveys that belong to folders will not be included in the response,
        unless

        a search is being made.


        Results are ordered by `title` ascending by default if no sorting is specified.


        Query Parameters:


        - q: Search surveys and folders.


        - filter[status]: Return only surveys in a specific status (`archived` or
        `open`). Folders will also be returned in the response.

        - filter[external_folder_id]: Filter surveys by folder using string of external_id
        (UUID). Only surveys will be returned.

        - filter[modified_after]: Return surveys and folders that have been created
        or modified after a timestamp (in UTC Epoch format).

        - filter[deleted_after]: Return surveys and folders that have been deleted
        after the specified timestamp.


        - page[number]: Page to retrieve from the entire result set.

        - page[size]: Max amount of objects to return per page in the response. Defaults
        to 100.


        - sort: Sort by fields (comma separated). Use `-` prefix on field name to
        sort descending.

        '
      operationId: get_site_surveys_and_folders
      parameters:
      - description: Site ID
        in: path
        name: site_id
        required: true
        schema:
          example: 86af1f1d-4f19-4c6c-afd6-e5ee041666ce
          type: string
      - description: Return only surveys in a specific status (`archived` or `open`).
        in: query
        name: filter[status]
        schema:
          enum:
          - archived
          - open
          type: string
      - description: Filter surveys by folder using string of external_id (UUID)
        in: query
        name: filter[external_folder_id]
        schema:
          example: b14663f6-9ad1-40c0-8a1a-32f2e19b1ccb
          type: string
      - description: Return only surveys and folders that have been created or modified
          after a timestamp (in UTC Epoch format).
        in: query
        name: filter[modified_after]
        schema:
          example: 1658776598
          type: number
      - description: Return surveys and folders that have been deleted after the specified
          timestamp.
        in: query
        name: filter[deleted_after]
        schema:
          example: 1658776598
          type: number
      - description: Sort by column names (comma separated). Use `-` prefix on column
          name to sort descending
        in: query
        name: sort
        schema:
          enum:
          - id
          - title
          - document_image_url
          - editor_id
          - editor_first_name
          - editor_last_name
          - comments_count
          - elements_count
          - is_folder
          - created_at
          - modified_at
          - status
          - survey_count
          example: sort=-is_folder,name,editor_first_name
          type: string
      - $ref: '#/components/parameters/q'
      - $ref: '#/components/parameters/page[number]'
      - $ref: '#/components/parameters/page[size]'
      public: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  surveys:
                    items:
                      properties:
                        elements_count:
                          description: Element count for survey
                          example: 90
                          type: integer
                        id:
                          example: b14663f6-9ad1-40c0-8a1a-32f2e19b1ccb
                          type: string
                        is_archived:
                          description: If the survey is archived or not
                          example: false
                          type: boolean
                        is_folder:
                          example: false
                          type: boolean
                        label:
                          example: TGS-123
                          type: string
                        preview_image:
                          description: URL to the survey's preview image
                          type: string
                        survey_count:
                          description: Survey count for folder
                          example: 34
                          type: integer
                        title:
                          example: My survey
                          type: string
                      type: object
                    type: array
                type: object
          description: OK
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
      summary: Returns all surveys and folders for a specific site. These are shown
        in the site overview page.
      tags:
      - Surveys
      - v3
  /v3/site/{site_id}/survey/{survey_id}:
    put:
      description: 'Also allows creating/updating surveys with elements, comments,
        and annotations.

        '
      operationId: create_or_update_survey
      parameters:
      - description: Site external ID
        in: path
        name: site_id
        required: true
        schema:
          example: 86af1f1d-4f19-4c6c-afd6-e5ee041666ce
          type: string
      - description: Survey external ID
        in: path
        name: survey_id
        required: true
        schema:
          example: 86af1f1d-4f19-4c6c-afd6-e5ee041666ce
          type: string
      public: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SurveySchema'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveySchema'
          description: Survey updated successfully
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveySchema'
          description: Survey created successfully
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
      summary: Allows creating a new survey with a unique identifier generated by
        the client, or updates the existing survey with that identifier if it exists.
      tags:
      - Surveys
      - v3
  /v3/survey/{survey_id}:
    delete:
      description: 'Also expires any shares of the survey.

        '
      operationId: delete_survey
      parameters:
      - description: Survey ID
        in: path
        name: survey_id
        required: true
        schema:
          example: 86af1f1d-4f19-4c6c-afd6-e5ee041666ce
          type: string
      public: true
      responses:
        '204':
          description: OK
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
      summary: Deletes a survey and all its related objects
      tags:
      - Surveys
      - v3
  /v3/teams:
    get:
      operationId: get_user_teams
      public: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      attributes:
                        properties:
                          budget_status:
                            type: integer
                          labor_rate:
                            format: float
                            type: number
                          logo_url:
                            type: string
                          margin_range:
                            type: number
                          name:
                            type: string
                          unit:
                            enum:
                            - metric
                            - imperaial_standard
                            type: string
                        type: object
                      id:
                        type: string
                      properties:
                        type: string
                      relationships:
                        properties:
                          account:
                            properties:
                              data:
                                properties:
                                  id:
                                    type: string
                                  type:
                                    type: string
                                type: object
                            type: object
                          owner:
                            properties:
                              data:
                                properties:
                                  id:
                                    type: string
                                  type:
                                    type: string
                                type: object
                            type: object
                        type: object
                      type: object
                    type: array
                type: object
          description: OK
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      summary: Returns all the teams the current user is a member of
      tags:
      - Teams
      - v3
  /v3/user:
    patch:
      operationId: update_user
      public: true
      requestBody:
        content:
          application/json:
            schema:
              properties:
                city:
                  type: string
                company:
                  type: string
                country:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                mobile:
                  type: string
                state:
                  type: string
                title:
                  type: string
                user_name:
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  accounts:
                    items:
                      properties:
                        cancel_requested:
                          type: boolean
                        company:
                          type: string
                        features:
                          properties:
                            comments:
                              type: boolean
                            multiple_teams:
                              type: boolean
                            site_access_permissions:
                              type: boolean
                            site_tagging:
                              type: boolean
                          type: object
                        id:
                          example: 450495
                          type: integer
                        is_free:
                          type: boolean
                        is_trial:
                          type: boolean
                      type: object
                    type: array
                  avatar_url:
                    type: string
                  company:
                    example: System Surveyor
                    type: string
                  country:
                    type: string
                  created_at:
                    type: integer
                  email:
                    example: foobar@gmail.com
                    type: string
                  first_name:
                    example: John
                    type: string
                  id:
                    example: 12094
                    type: integer
                  is_complete_setup:
                    type: boolean
                  last_login:
                    type: number
                  last_name:
                    example: Doe
                    type: string
                  mobile:
                    example: 910-423-345
                    type: string
                  state:
                    type: string
                  teams:
                    items:
                      properties:
                        account_id:
                          example: 995
                          type: integer
                        budget_status:
                          type: integer
                        id:
                          example: 112
                          type: integer
                        labor_rate:
                          type: float
                        margin_range:
                          type: float
                        name:
                          example: John's Team
                          type: string
                        role:
                          example: team_member
                          type: string
                        unit:
                          enum:
                          - metric
                          - imperial
                          example: metric
                          type: string
                      type: object
                    type: array
                  title:
                    example: CEO
                    type: string
                  user_name:
                    example: foobar
                    type: string
                type: object
          description: OK
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
      summary: Update user information associated with the linked account
      tags:
      - Users
      - v3

